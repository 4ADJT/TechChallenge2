services:

  dbpostgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ez_client_services
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ez_client_services"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - ezblue-network

  mongo-blue:
    image: mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongo
      - MONGO_INITDB_DATABASE=ezblue
    ports:
      - 27017:27017
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    volumes:
    - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - ezblue-network

  ez-eureka-server:
    restart: always
    build:
      context: ./Ez-Eureka-Server
      dockerfile: Dockerfile
    ports:
      - 8761:8761
    depends_on:
      dbpostgres:
        condition: service_healthy
        restart: true
      mongo-blue:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ["CMD-SHELL", "apt-get -y update; apt-get -y install curl; curl -f http://localhost:8761"]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - ezblue-network

  ez-gatway:
    restart: always  
    build:
      context: ./Ez-Gateway-Services
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    links:
      - ez-eureka-server  
    environment:
      - EUREKA_SERVER=http://ez-eureka-server:8761/eureka/
    depends_on:
      ez-eureka-server:
        condition: service_healthy
        restart: true
    networks:
      - ezblue-network

  ez-blue-service:
    restart: always
    build:
      context: ./Ez-Blue-Services
      dockerfile: Dockerfile
    ports:
      - 8081:8081
    links:
      - dbpostgres
      - ez-gatway
      - boundary-service
    environment:
      - EUREKA_SERVER=http://ez-eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbpostgres:5432/ez_client_services
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      ez-eureka-server:
        condition: service_healthy
        restart: true
      ez-gatway:
        condition: service_started
    networks:
      - ezblue-network

  ez-client-service:
    restart: always
    build:
      context: ./Ez-Client-Services
      dockerfile: Dockerfile
    ports:
      - 8082:8082
    links:
      - dbpostgres
      - ez-gatway
      - boundary-service
    environment:
      - EUREKA_SERVER=http://ez-eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbpostgres:5432/ez_client_services
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      ez-eureka-server:
        condition: service_healthy
        restart: true
      ez-gatway:
        condition: service_started
    networks:
      - ezblue-network

  boundary-service:
    restart: always
    build:
      context: ./BoundaryService
      dockerfile: Dockerfile
    ports:
      - 8085:8085
    links:
      - mongo-blue
      - ez-gatway
    depends_on:
      ez-eureka-server:
        condition: service_healthy
        restart: true
      ez-gatway:
        condition: service_started
      mongo-blue:
        condition: service_healthy
    networks:
      - ezblue-network

networks:
  ezblue-network:
    driver: bridge
